#yes is first level,no is second level
##factor
x <- factor(c("yes","yes","no","yes","no"))
table(x)
unclass(x)
x <- factor(c("yes","yes","no","yes","no"),levels = c("yes","no"))
##NAN NA
x <- c(1, 2, NA, 3, 4)
is.na(x)
is.nan(x)
x <- c(1, 2, NaN, 3, 4)
is.na(x)
is.nan(x)
x <- data.frame(foo = 1:4, bar = c(T, T, F, F))
nrow(x)
ncol(x)
View(x)
x <- c(1, 2, 3, 4)
names(x)
x <- c(1, 2, 3, 4)
names(x)
names(x) <- c('bar', 'jun', 'li', 'kk')
names(x)
x <- c(1, 2, 3, 4)
names(x)
names(x) <- c('bar', 'jun', 'li', 'kk')
x
x <- list(a=1, b=2, c=3)
x
m
m <- matrix(1:4, nrow=2, ncol=2)
m
m <- matrix(1:4, nrow=2, ncol=2)
dimnames(m) <- list(c('a', 'b'), c('c', 'd'))
m
x
y <- c(1.7,"a")
y
class(y)
x <- 1:3
y <- 7:9
rbind(x,y)
cbind(x,y)
x <- 1:4
y <- 2
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x>10]==4
x[x>10]<-4
x
x <- read.csv('hw1_data.csv')
names(x) <- c('bar', 'jun', 'li', 'kk')
data <- read.csv("hw1_data.csv")
setwd("~/Documents/MOOC/Data Science/R_programming/week1_Start R")
data <- read.csv("hw1_data.csv")
names(data)
r2 <- file("hw1_data.csv", "r")
data2 <- readLines(r2,2)
close(r2)
data2
r2 <- file("hw1_data.csv", "r")
data2 <- readLines(r2,3)
close(r2)
data2
nrow(data)
rl2 <- file("hw1_data.csv", "r")
datal2 <- readLines(rl2,2)
close(rl2)
print(datal2)
rl2 <- file("hw1_data.csv", "r")
datal2 <- readLines(rl2,3)
close(rl2)
print(datal2)
rl2 <- file("hw1_data.csv", "r")
datal2 <- tail(rl2,2)
close(rl2)
print(datal2)
datal2 <- tail(data,2)
print(datal2)
print(data[47,1])
print(data[47,1, drop = FALSE])
str(data)
sum(is.na(data$Ozone))
mean(data$Ozone[!is.na(data$Ozone)])
mean(data$Solar.R[data$Ozone >31 &data$Temp >90])
mean(data$Solar.R[data$Ozone >31 & data$Temp >90])
Solarset <- subset(data, Ozone >31 & Temp >90)
print(mean(Solarset$Solar.R[!is.na(Solarset$Solar.R)]))
val <- complete.cases(data$Solar.R, data$Ozone, data$Temp)
mean(data$Solar.R[val & data$Ozone >31 & data$Temp >90])
con <- data$Month[!is.na(data$Month) & data$Mont==6]
mean(data$Temp[con])
con <- data$Month[data$Mont==6]
mean(data$Temp[con])
con <- data$Month[data$Month == 6]
mean(data$Temp[con])
mean(data$Temp[data$Month == 6])
max(data$Ozone[data$Month == 5])
max(data$Ozone[data$Month == 5 & !is.na(data$Ozone)])
install.packages("swirl")
packageVersion("swirl")
library(swirl)
ls()
rm(list = ls())
swirl()
5 + 7
x <- 5 + 7
x
x -3
y <- x - 3
y
z <- c(1.1, 9, 3.14)
c()
c
?c
z
z <- c(z, 555, z)
c(z, 555, z)
z*2 +100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
d <- c(1, 2, 3, 4)+c(0,10)
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2 +1000
my_div
getwd()
ls()
x <-9
ls()
list.files()
play(0)
play()
dir()
nxt()
?list.files
args(list.files)
old.dir <- getwd()
?dir.create()
testdir<-dir.create()
testdir<-dir.create(getwd())
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
getwd()
file.exists("mytest.R")
file.info("mytest.R")
?file.rename()
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path()
file.path("mytest3.R")
s
file.path("mytest3.R",fsep=folder1)
folder1<-file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
getwd()
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
unlink("testdir2")
unlink("testdir2", recursive = TRUE)
setwd("testdir")
setwd(old.dir)
getwd()
unlink("testdir", recursive = TRUE)
play()
getwd()
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
getwd()
file.create("mytest.R")
file.exists("mytest.R")
file.path("mytest.R")
getwd()
setwd("mytest.R")
setwd("old.dir")
getwd()
setwd(old.dir)
getwd()
unlink("testdir", recursive = TRUE)
ls()
list.files()
file.exists(testdir)
file.exists("testdir")
nxt()
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq<-seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
print(tf)
tf
num_vect>=6
my_char<-c("My","name","is")
my_char
paste(my_char,collapse = " ")
my_name<-c(my_char,"jun")
my_name
paste(my_name,collapse = " ")
paste("Hello","world!",sep = " ")
paste(1:3,c("X","Y","Z"),sep = "")
paste(LETTERS, 1:4, sep = "-")
x<-c(44,NA,5,NA)
X*3
x*3
y<-rnorm(1000)
z<-rep(NA,1000)
my_data<-sample(c(y,z),100)
my_na<-is.na(my_data)
my_na
my_data
my_data
my_data==NA
sum(is.na(my_data))
sum(my_na)
my_data
1/0
0/0
Inf/Inf
Inf-Inf
x
x[1:10]
x[is.na(0)]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
c(x[!3&!5&!7])
x[!c(3,5,7)]
x[!=c(3,5,7)]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
11
bar
bar
vect(bar)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector<-c(1:20)
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(vector)<-c(4,5)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix()
?matrix
matrix(0)
my_matrix2<-matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients<-c("Bill","Gina", "Kelly", "Sean")
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","bp","rating","test")
cnames<-c("patient","age","weight",bp","rating","test")
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_data)<-cnames
my_data
seq_len(3)
swirl()
swirl()
TRUE==TRUE
(FALSE == TRUE) == FALSE
6==7
6<7
10<=10
5!=7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE).
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE((6>4))
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6,!FALSE)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c)
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function()
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder()
remainder(11,5)
remainder(divisor = 11,num = 5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){nail(x,1)}, c(8,4,0))
evaluate(function(x){tail(x,1)}, c(8,4,0))
?paste
paste("Programming","is","fun!")
submit()
telegram("lalala")
submit()
mad_libs(c(place="China",adjective="good",noun="apple"))
submit()
submit()
'I'%p%'love'%p%'R!'
